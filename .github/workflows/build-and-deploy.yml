name: CI

# 1 
# Controls when the workflow will run

on:
  push: 
    branches: [ main ]

  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true

# 2
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Repo
        uses: actions/checkout@v3

      - name: Login to Digital Ocean
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}  
          port: 22
          script: |
            mkdir app
            cd app
            git clone https://github.com/${{ github.repository }}
            cd crm
            git checkout main
            git submodule update --init
            git submodule update --remote
            git reset --hard HEAD
            git pull --force

            if [ -f .env ]; then
              rm .env
            fi
            touch .env
            echo "PORT=${{secrets.API_PORT}}" >> .env
            echo "DB_DIALECT=${{secrets.DB_DIALECT}}" >> .env
            echo "DB_HOST=${{secrets.DB_HOST}}" >> .env
            echo "DB_NAME=${{secrets.DB_NAME}}" >> .env
            echo "DB_PORT=${{secrets.DB_PORT}}" >> .env
            echo "DB_PWD=${{secrets.DB_PASSWORD}}" >> .env
            echo "DB_USER=${{secrets.DB_USER}}" >> .env
            echo "NODE_ENV=${{secrets.NODE_ENV}}" >> .env
            echo "TOKEN_SECRET_KEY=${{secrets.TOKEN_SECRET_KEY}}" >> .env 
            echo "REACT_APP_API_URL=${{secrets.REACT_API_URL}}" >> .env 
            echo "REACT_APP_PORT=${{secrets.REACT_APP_PORT}}"
            echo "HOST=${{secrets.HOST}}" >> .env 

            sudo docker-compose  down
            sudo docker-compose -f docker-compose.yml --env-file .env up -d --build
            echo 'Deployment sucessful'
     
      
        
        
      
      
